import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from study_buddy_bot.models import User
from study_buddy_bot.db import AsyncSessionLocal
from sqlalchemy import select
from datetime import datetime


router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    try:
        async with AsyncSessionLocal() as session:
            stmt = select(User).where(User.telegram_id == message.from_user.id)
            result = await session.execute(stmt)
            user = result.scalar_one_or_none()

            if user is None:
                user = User(
                    telegram_id=message.from_user.id,
                    first_name=message.from_user.first_name,
                    username=message.from_user.username,
                    registered_at=datetime.utcnow(),
                )
                session.add(user)
                await session.commit()
                text = (
                    f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n"
                    f"–Ø ‚Äî StudyBuddyBot. –ü–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–∞–¥–∞—á–∏, –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö –∏ –≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.\n"
                    f"–û—Ç–ø—Ä–∞–≤—å /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ."
                )
            else:
                text = (
                    f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name or '–¥—Ä—É–≥'}!\n"
                    f"–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –≤ —É—á—ë–±–µ. –û—Ç–ø—Ä–∞–≤—å /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
                )
            await message.answer(text)
    except Exception:
        logging.exception("Failed to handle /start")
        await message.answer("–£–ø—Å, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@router.message(Command("help"))
async def cmd_help(message: Message):
    try:
        text = (
            "üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "/add <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É (–¥–µ–¥–ª–∞–π–Ω ‚Äî —Å–µ–≥–æ–¥–Ω—è)\n"
            "/list ‚Äî —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∑–∞–¥–∞—á\n"
            "/done <–Ω–æ–º–µ—Ä> ‚Äî –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π\n"
            "/stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
            "/help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        )
        await message.answer(text, parse_mode="HTML")
    except Exception:
        logging.exception("Failed to handle /help")
        await message.answer("–£–ø—Å, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

